name: deploy 

on:
  push:
    branches:
      - main 

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps: 
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: List files (for debugging)
        run: ls -a

      - name: Set up SSH key
        run: |
          # Write the SSH private key from GitHub secrets to a file
          echo "${{ secrets.LARRAVEL_KEY }}" > ssh_key.pem
          # Set restrictive permissions for the private key
          chmod 400 ssh_key.pem

      - name: Deploy to EC2
        env:
          # Pass the LARAVEL_ENV secret as an environment variable
          # This secret should contain the complete content of your .env file
          LARRAVEL_ENV: ${{ secrets.LARRAVEL_ENV }}
        run: |
          # SSH into the EC2 instance and execute deployment commands
          # -o StrictHostKeyChecking=no bypasses host key checking for initial connection
          # -i ssh_key.pem specifies the private key for authentication
          ssh -o StrictHostKeyChecking=no -i ssh_key.pem ubuntu@3.110.136.243 << EOF
           # Exit immediately if a command exits with a non-zero status
           set -e 

          
           

          
           sudo mkdir -p /var/www/html/laravel
           echo "Ensuring base directory exists: /var/www/html/laravel"
          
           # Clone the repository if it's not already cloned, otherwise pull latest changes
           if [ ! -d "$/var/www/html/laravel/.git" ]; then
              echo "Cloning Laravel project into $/var/www/html/laravel..."
              git clone https://github.com/Nikhilrajput-12/larravel.git /var/www/html/laravel
           else
              echo "Repo already exists at /var/www/html/laravel. Pulling latest changes..."
              cd $/var/www/html/laravel
              git pull origin main
           fi

           # Navigate into the Laravel project directory
           cd /var/www/html/laravel

         
           echo "Setting correct ownership for project files..."
           sudo chown -R ubuntu:ubuntu var/www/html/laravel

           echo "Writing .env from secret..."
         
           cat > .env <<EOL
          ${LARAVEL_ENV}
          EOL 

           echo "Clearing Laravel config cache..."
           php artisan config:clear || true
          
           echo "Installing Composer dependencies..."
          
           composer install --no-interaction --prefer-dist --optimize-autoloader
          
           echo "Running database migrations..."
           php artisan migrate --force

           echo "Optimizing Laravel for production..."
           # Cache configuration, routes, and views for performance.
           php artisan config:cache
           php artisan route:cache
           php artisan view:cache

         
           echo "Setting correct Laravel permissions for storage and bootstrap/cache..."
           sudo chmod -R 775 storage bootstrap/cache
           # Ensure the web server user (www-data) is the group owner for these critical directories
           sudo chown -R www-data:www-data storage bootstrap/cache

           echo "Clearing application cache (optional, but good after deployment)..."
           php artisan cache:clear

           echo "Restarting PHP-FPM and Nginx..."
           sudo systemctl restart php8.1-fpm || true # Adjust PHP version as needed (e.g., php7.4-fpm)
           sudo systemctl restart nginx || true # Adjust web server name as needed (e.g., apache2)

           echo "Deployment complete!"
          EOF